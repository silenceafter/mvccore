// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using homeWork9.Models;

#nullable disable

namespace homeWork9.Migrations
{
    [DbContext(typeof(MessageContext))]
    [Migration("20220805090414_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("email")
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("homeWork9.Models.ContactModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("character(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Contacts", "email");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "a59-info@yandex.ru"
                        },
                        new
                        {
                            Id = 2,
                            EmailAddress = "silenceafter@yandex.ru"
                        },
                        new
                        {
                            Id = 3,
                            EmailAddress = "axasthur89@mail.ru"
                        },
                        new
                        {
                            Id = 4,
                            EmailAddress = "a8959@mail.ru"
                        },
                        new
                        {
                            Id = 5,
                            EmailAddress = "a25031992@gmail.com"
                        });
                });

            modelBuilder.Entity("homeWork9.Models.MessageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<int>("FromId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsHtml")
                        .HasColumnType("boolean");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("character(50)");

                    b.Property<int>("ToId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Messages", "email");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Body1",
                            FromId = 1,
                            IsHtml = false,
                            Theme = "Theme1",
                            ToId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = "Body2",
                            FromId = 3,
                            IsHtml = false,
                            Theme = "Theme2",
                            ToId = 1,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Body = "Body3",
                            FromId = 2,
                            IsHtml = false,
                            Theme = "Theme3",
                            ToId = 3,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Body = "Body4",
                            FromId = 4,
                            IsHtml = false,
                            Theme = "Theme4",
                            ToId = 2,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Body = "Body5",
                            FromId = 3,
                            IsHtml = false,
                            Theme = "Theme5",
                            ToId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Body = "Body6",
                            FromId = 5,
                            IsHtml = false,
                            Theme = "Theme6",
                            ToId = 3,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Body = "Body7",
                            FromId = 4,
                            IsHtml = false,
                            Theme = "Theme7",
                            ToId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            Body = "Body8",
                            FromId = 3,
                            IsHtml = false,
                            Theme = "Theme8",
                            ToId = 4,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            Body = "Body9",
                            FromId = 5,
                            IsHtml = false,
                            Theme = "Theme9",
                            ToId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 10,
                            Body = "Body10",
                            FromId = 5,
                            IsHtml = false,
                            Theme = "Theme10",
                            ToId = 5,
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("homeWork9.Models.MessageTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MessageTypes", "email");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Incoming"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Outgoing"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
